(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class l{constructor(){this.localVideo=document.getElementById("localVideo"),this.remoteVideo=document.getElementById("remoteVideo"),this.roomIdInput=document.getElementById("roomId"),this.createRoomBtn=document.getElementById("createRoom"),this.joinRoomBtn=document.getElementById("joinRoom"),this.leaveRoomBtn=document.getElementById("leaveRoom"),this.toggleVideoBtn=document.getElementById("toggleVideo"),this.toggleAudioBtn=document.getElementById("toggleAudio"),this.shareScreenBtn=document.getElementById("shareScreen"),this.connectionStatus=document.getElementById("connectionStatus"),this.currentRoom=document.getElementById("currentRoom"),this.chatMessages=document.getElementById("chatMessages"),this.messageInput=document.getElementById("messageInput"),this.sendMessageBtn=document.getElementById("sendMessage"),this.localStream=null,this.remoteStream=null,this.peerConnection=null,this.dataChannel=null,this.currentRoomId=null,this.isVideoEnabled=!0,this.isAudioEnabled=!0,this.isScreenSharing=!1,this.isHost=!1,this.iceCandidates=[],this.secretKey="WebRTC-VideoChat-2025",this.servers={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"stun:stun1.l.google.com:19302"}]},this.init()}init(){this.setupEventListeners(),this.updateConnectionStatus("未连接")}setupEventListeners(){this.createRoomBtn.addEventListener("click",()=>this.createRoom()),this.joinRoomBtn.addEventListener("click",()=>this.joinRoom()),this.leaveRoomBtn.addEventListener("click",()=>this.leaveRoom()),this.toggleVideoBtn.addEventListener("click",()=>this.toggleVideo()),this.toggleAudioBtn.addEventListener("click",()=>this.toggleAudio()),this.shareScreenBtn.addEventListener("click",()=>this.toggleScreenShare()),this.sendMessageBtn.addEventListener("click",()=>this.sendMessage()),this.messageInput.addEventListener("keypress",e=>{e.key==="Enter"&&this.sendMessage()})}async createRoom(){try{await this.startLocalStream(),await this.setupPeerConnection(),this.iceCandidates=[];const e=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(e),console.log("🔍 创建的offer:",e),console.log("🔍 Offer类型:",typeof e),console.log("🔍 Offer内容:",JSON.stringify(e,null,2)),this.updateConnectionStatus("等待对方加入"),this.addChatMessage("系统","🎉 房间创建中..."),setTimeout(()=>{const t={offer:e,iceCandidates:this.iceCandidates||[]},o=this.encryptOffer(t);this.roomIdInput.value=o,this.currentRoomId=o,this.isHost=!0,this.currentRoom.textContent=`房间: ${o.substring(0,8)}...`,this.toggleRoomButtons(!0),this.addChatMessage("系统","🎉 房间创建成功！"),this.addChatMessage("系统",`🔑 房间密码: ${o}`),this.addChatMessage("系统","💡 请将此密码分享给其他人，他们输入密码即可加入！"),this.addChatMessage("系统",`🔄 已收集 ${this.iceCandidates.length} 个ICE候选`),console.log(`✅ 房间已创建，密码: ${o}`),console.log(`🔄 收集到 ${this.iceCandidates.length} 个ICE候选`)},3e3)}catch(e){console.error("创建房间失败:",e),this.addChatMessage("系统","❌ 创建房间失败: "+e.message)}}async joinRoom(){try{const e=this.roomIdInput.value.trim();if(!e){alert("请输入房间密码");return}const t=this.decryptToken(e);if(!t||!t.offer){alert("❌ 房间密码无效！请检查密码是否正确。");return}if(this.isHost=!1,await this.startLocalStream(),await this.setupPeerConnection(),this.currentRoomId=e,this.updateConnectionStatus("正在连接"),this.currentRoom.textContent=`房间: ${e.substring(0,8)}...`,this.toggleRoomButtons(!0),this.addChatMessage("系统","🔐 正在加入房间..."),console.log("🔍 准备设置远程offer:",t.offer),console.log("🔍 Offer类型:",typeof t.offer),console.log("🔍 Offer内容:",JSON.stringify(t.offer,null,2)),!t.offer||!t.offer.type||!t.offer.sdp)throw new Error("无效的offer格式：缺少type或sdp字段");if(await this.peerConnection.setRemoteDescription(t.offer),t.iceCandidates&&t.iceCandidates.length>0){console.log(`🔄 处理 ${t.iceCandidates.length} 个ICE候选`);for(const s of t.iceCandidates)try{await this.peerConnection.addIceCandidate(s),console.log("✅ ICE候选添加成功")}catch(n){console.error("❌ ICE候选添加失败:",n)}}this.iceCandidates=[];const o=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(o),this.addChatMessage("系统","🤝 正在建立连接..."),setTimeout(async()=>{const s={answer:o,iceCandidates:this.iceCandidates||[]},n=this.encryptAnswer(s);this.addChatMessage("系统",`📋 Answer密码: ${n}`),this.addChatMessage("系统","💡 请将此Answer密码发送给房间创建者"),this.addChatMessage("系统",`📝 创建者运行: window.videoChat.acceptAnswer("${n}")`),this.addChatMessage("系统",`🔄 已收集 ${this.iceCandidates.length} 个ICE候选`),console.log("📋 Answer密码:",n),console.log("💡 房间创建者请运行:",`window.videoChat.acceptAnswer("${n}")`),console.log(`🔄 收集到 ${this.iceCandidates.length} 个ICE候选`)},3e3)}catch(e){console.error("加入房间失败:",e),this.addChatMessage("系统","❌ 加入房间失败: "+e.message)}}async leaveRoom(){this.peerConnection&&(this.peerConnection.close(),this.peerConnection=null),this.localStream&&(this.localStream.getTracks().forEach(e=>e.stop()),this.localStream=null),this.localVideo.srcObject=null,this.remoteVideo.srcObject=null,this.currentRoomId=null,this.isHost=!1,this.updateConnectionStatus("未连接"),this.currentRoom.textContent="",this.toggleRoomButtons(!1),this.addChatMessage("系统","👋 已离开房间")}async startLocalStream(){try{const e={video:!0,audio:!0};this.localStream=await navigator.mediaDevices.getUserMedia(e),this.localVideo.srcObject=this.localStream,this.localVideo.autoplay=!0,this.localVideo.playsInline=!0,this.localVideo.muted=!0,console.log("✅ 本地媒体流获取成功"),console.log("📺 视频轨道:",this.localStream.getVideoTracks().length),console.log("🔊 音频轨道:",this.localStream.getAudioTracks().length)}catch(e){throw console.error("获取本地媒体流失败:",e),new Error("无法访问摄像头和麦克风")}}async setupPeerConnection(){this.peerConnection=new RTCPeerConnection(this.servers),this.localStream&&(this.localStream.getTracks().forEach(e=>{console.log(`📤 添加本地轨道: ${e.kind}`),this.peerConnection.addTrack(e,this.localStream)}),console.log("✅ 所有本地轨道已添加到PeerConnection")),this.peerConnection.ontrack=e=>{if(console.log("📺 接收到远程视频流",e),console.log("📺 Streams:",e.streams),console.log("📺 Track:",e.track),e.streams&&e.streams.length>0){this.remoteVideo.srcObject=e.streams[0],console.log("✅ 远程视频流设置成功");const t=e.streams[0];console.log("📊 远程流信息:"),console.log("  - 视频轨道数量:",t.getVideoTracks().length),console.log("  - 音频轨道数量:",t.getAudioTracks().length),console.log("  - 流ID:",t.id),console.log("  - 流活跃状态:",t.active)}else e.track&&(this.remoteStream||(this.remoteStream=new MediaStream,this.remoteVideo.srcObject=this.remoteStream),this.remoteStream.addTrack(e.track),console.log("✅ 远程track添加成功"),console.log("📊 轨道信息:",e.track.kind,e.track.id));this.remoteVideo.autoplay=!0,this.remoteVideo.playsInline=!0,this.remoteVideo.play().catch(t=>{console.log("远程视频自动播放失败，用户需要手动点击播放:",t),this.addChatMessage("系统","🎥 远程视频已就绪，如无法自动播放请手动点击播放按钮")}),this.remoteVideo.addEventListener("loadedmetadata",()=>{console.log("✅ 远程视频元数据加载完成"),console.log(`📐 视频尺寸: ${this.remoteVideo.videoWidth} x ${this.remoteVideo.videoHeight}`)}),this.remoteVideo.addEventListener("loadeddata",()=>{console.log("✅ 远程视频数据加载完成")}),this.remoteVideo.addEventListener("playing",()=>{console.log("✅ 远程视频开始播放")}),this.updateConnectionStatus("✅ 已连接"),this.addChatMessage("系统","🎥 视频通话已建立")},this.peerConnection.onicecandidate=e=>{e.candidate?(console.log("🔄 收集到ICE候选:",e.candidate.candidate),this.iceCandidates||(this.iceCandidates=[]),this.iceCandidates.push(e.candidate)):console.log("🔄 ICE候选收集完成")},this.peerConnection.onconnectionstatechange=()=>{const e=this.peerConnection.connectionState;switch(console.log("🔗 连接状态:",e),e){case"connected":this.updateConnectionStatus("✅ 已连接");break;case"connecting":this.updateConnectionStatus("🔄 连接中");break;case"disconnected":this.updateConnectionStatus("⚠️ 连接断开");break;case"failed":this.updateConnectionStatus("❌ 连接失败");break}},this.setupDataChannel()}setupDataChannel(){this.dataChannel=this.peerConnection.createDataChannel("chat",{ordered:!0}),this.dataChannel.onopen=()=>{console.log("💬 聊天通道已开启")},this.dataChannel.onmessage=e=>{const t=JSON.parse(e.data);this.addChatMessage(t.sender,t.text,!1)},this.peerConnection.ondatachannel=e=>{const t=e.channel;t.onmessage=o=>{const s=JSON.parse(o.data);this.addChatMessage(s.sender,s.text,!1)}}}async toggleVideo(){if(this.localStream){const e=this.localStream.getVideoTracks()[0];e&&(e.enabled=!e.enabled,this.isVideoEnabled=e.enabled,this.toggleVideoBtn.textContent=this.isVideoEnabled?"📷 关闭摄像头":"📷 开启摄像头",this.addChatMessage("系统",this.isVideoEnabled?"📷 摄像头已开启":"📷 摄像头已关闭"))}}async toggleAudio(){if(this.localStream){const e=this.localStream.getAudioTracks()[0];e&&(e.enabled=!e.enabled,this.isAudioEnabled=e.enabled,this.toggleAudioBtn.textContent=this.isAudioEnabled?"🔇 静音":"🔊 取消静音",this.addChatMessage("系统",this.isAudioEnabled?"🔊 麦克风已开启":"🔇 麦克风已静音"))}}async toggleScreenShare(){try{if(this.isScreenSharing)this.stopScreenShare();else{const e=await navigator.mediaDevices.getDisplayMedia({video:!0,audio:!0}),t=e.getVideoTracks()[0],o=this.peerConnection.getSenders().find(s=>s.track&&s.track.kind==="video");o&&await o.replaceTrack(t),this.localVideo.srcObject=e,this.shareScreenBtn.textContent="📺 停止分享",this.isScreenSharing=!0,this.addChatMessage("系统","📺 开始分享屏幕"),t.onended=()=>{this.stopScreenShare()}}}catch(e){console.error("屏幕分享失败:",e),this.addChatMessage("系统","屏幕分享失败: "+e.message)}}async stopScreenShare(){try{const e=await navigator.mediaDevices.getUserMedia({video:!0,audio:!0}),t=e.getVideoTracks()[0],o=this.peerConnection.getSenders().find(s=>s.track&&s.track.kind==="video");o&&await o.replaceTrack(t),this.localVideo.srcObject=e,this.localStream=e,this.shareScreenBtn.textContent="📺 分享屏幕",this.isScreenSharing=!1,this.addChatMessage("系统","📷 已切换回摄像头")}catch(e){console.error("停止屏幕分享失败:",e)}}sendMessage(){const e=this.messageInput.value.trim();if(e&&this.dataChannel&&this.dataChannel.readyState==="open"){const t={sender:"我",text:e,timestamp:new Date().toLocaleTimeString()};this.dataChannel.send(JSON.stringify(t)),this.addChatMessage("我",e,!0),this.messageInput.value=""}else e&&(this.addChatMessage("我",e,!0),this.messageInput.value="",this.addChatMessage("系统","⚠️ 聊天功能需要建立连接后使用"))}addChatMessage(e,t,o=!1){const s=document.createElement("div");s.className=`message ${o?"local":"remote"}`;const n=new Date().toLocaleTimeString();s.innerHTML=`
            <div class="message-text">${t}</div>
            <div class="timestamp">${e} - ${n}</div>
        `,this.chatMessages.appendChild(s),this.chatMessages.scrollTop=this.chatMessages.scrollHeight}updateConnectionStatus(e){this.connectionStatus.textContent=e,e.includes("已连接")||e.includes("✅")?this.connectionStatus.className="connected":e.includes("连接")||e.includes("🔄")?this.connectionStatus.className="connecting":this.connectionStatus.className="disconnected"}toggleRoomButtons(e){this.createRoomBtn.disabled=e,this.joinRoomBtn.disabled=e,this.leaveRoomBtn.disabled=!e,this.roomIdInput.disabled=e}generateRoomPassword(){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";let t="";for(let o=0;o<6;o++)t+=e.charAt(Math.floor(Math.random()*e.length));return t}encryptOffer(e){try{console.log("🔐 加密房间数据:",e);const t={offer:e.offer||e,iceCandidates:e.iceCandidates||this.iceCandidates||[],timestamp:Date.now()};console.log("🔐 最终加密数据:",t);const o=JSON.stringify(t),s=btoa(unescape(encodeURIComponent(o+"|"+t.timestamp)));return`ROOM_${this.simpleHash(s+this.secretKey).substring(0,8)}_${s}`}catch(t){return console.error("加密失败:",t),`SIMPLE_${btoa(JSON.stringify(e))}`}}decryptToken(e){try{if(e.startsWith("ROOM_")){const t=e.split("_");if(t.length!==3)return null;const o=t[1],s=t[2],n=this.simpleHash(s+this.secretKey).substring(0,8);if(o!==n)return console.error("校验码验证失败"),null;const i=decodeURIComponent(escape(atob(s))),[c,d]=i.split("|"),a=JSON.parse(c||i);return console.log("🔍 解密数据:",a),a.offer&&typeof a.offer=="object"?{offer:a.offer,iceCandidates:a.iceCandidates||[]}:a.type&&a.sdp?{offer:a,iceCandidates:[]}:null}else if(e.startsWith("SIMPLE_")){const t=e.substring(7);return{offer:JSON.parse(atob(t)),iceCandidates:[]}}return null}catch(t){return console.error("解密失败:",t),console.error("Token:",e),null}}showAnswerForHost(e){const t=this.encryptAnswer(e);console.log("📋 请将以下Answer密码发送给房间创建者："),console.log(`Answer密码: ${t}`),this.addChatMessage("系统",`📋 Answer密码: ${t}`),this.addChatMessage("系统","💡 请将此Answer密码发送给房间创建者"),this.addChatMessage("系统",`📝 创建者运行: window.videoChat.acceptAnswer("${t}")`)}encryptAnswer(e){try{console.log("🔐 加密Answer数据:",e);const t={answer:e.answer||e,iceCandidates:e.iceCandidates||this.iceCandidates||[],timestamp:Date.now()};console.log("🔐 最终加密Answer数据:",t);const o=JSON.stringify(t),s=btoa(unescape(encodeURIComponent(o+"|"+t.timestamp)));return`ANS_${this.simpleHash(s+this.secretKey).substring(0,8)}_${s}`}catch(t){return console.error("Answer加密失败:",t),`SIMPLE_ANS_${btoa(JSON.stringify(e))}`}}decryptAnswerToken(e){try{if(e.startsWith("ANS_")){const t=e.split("_");if(t.length!==3)return null;const o=t[1],s=t[2],n=this.simpleHash(s+this.secretKey).substring(0,8);if(o!==n)return console.error("Answer校验码验证失败"),null;const i=decodeURIComponent(escape(atob(s))),[c,d]=i.split("|"),a=JSON.parse(c||i);return console.log("🔍 解密Answer数据:",a),a.answer&&typeof a.answer=="object"?{answer:a.answer,iceCandidates:a.iceCandidates||[]}:a.type&&a.sdp?{answer:a,iceCandidates:[]}:null}else if(e.startsWith("SIMPLE_ANS_")){const t=e.substring(11);return{answer:JSON.parse(atob(t)),iceCandidates:[]}}return null}catch(t){return console.error("Answer解密失败:",t),console.error("Token:",e),null}}simpleHash(e){let t=0;if(e.length===0)return t.toString();for(let o=0;o<e.length;o++){const s=e.charCodeAt(o);t=(t<<5)-t+s,t=t&t}return Math.abs(t).toString(16)}async acceptAnswer(e){try{const t=this.decryptAnswerToken(e);if(!t||!t.answer){this.addChatMessage("系统","❌ 无效的Answer密码！");return}if(await this.peerConnection.setRemoteDescription(t.answer),t.iceCandidates&&t.iceCandidates.length>0){console.log(`🔄 处理 ${t.iceCandidates.length} 个ICE候选`);for(const o of t.iceCandidates)try{await this.peerConnection.addIceCandidate(o),console.log("✅ ICE候选添加成功")}catch(s){console.error("❌ ICE候选添加失败:",s)}}this.addChatMessage("系统","✅ 连接建立成功！"),console.log("✅ 连接已建立")}catch(t){console.error("接受Answer失败:",t),this.addChatMessage("系统","❌ 连接失败: "+t.message)}}updateTokenWithIce(){this.isHost&&this.iceCandidates.length>0&&console.log(`🔄 收集到 ${this.iceCandidates.length} 个ICE候选`)}async handleIceCandidates(e){if(e&&Array.isArray(e))for(const t of e)try{await this.peerConnection.addIceCandidate(t),console.log("✅ 添加ICE候选成功")}catch(o){console.error("❌ 添加ICE候选失败:",o)}}}document.addEventListener("DOMContentLoaded",()=>{window.videoChat=new l,console.log("🎥 WebRTC视频聊天应用已初始化"),console.log("💡 使用说明："),console.log('1. 创建者：点击"创建房间"生成加密密码'),console.log('2. 加入者：输入密码点击"加入房间"'),console.log("3. 加入者会看到Answer密码，发送给创建者"),console.log('4. 创建者运行: window.videoChat.acceptAnswer("Answer密码")')});window.acceptAnswer=r=>{window.videoChat&&window.videoChat.isHost?window.videoChat.acceptAnswer(r):console.error("❌ 只有房间创建者可以接受Answer，或者应用尚未初始化")};
